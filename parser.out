Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    COMMENT
    DIGIT
    NAMEQUOTE
    RESERVEDELEMENT
    STRINGQUOTE

Grammar

Rule 0     S' -> starter
Rule 1     starter -> sentence
Rule 2     starter -> sentence starter
Rule 3     sentence -> atomsent
Rule 4     sentence -> boolsent
Rule 5     multisent -> sentence
Rule 6     multisent -> sentence multisent
Rule 7     multisent -> empty
Rule 8     atomsent -> OPEN predicate termseq CLOSE
Rule 9     predicate -> interpretedname
Rule 10    termseq -> interpretedname
Rule 11    termseq -> interpretedname termseq
Rule 12    termseq -> empty
Rule 13    interpretedname -> NUMERAL
Rule 14    interpretedname -> QUOTEDSTRING
Rule 15    boolsent -> OPEN AND multisent CLOSE
Rule 16    boolsent -> OPEN OR multisent CLOSE
Rule 17    boolsent -> OPEN IF sentence sentence CLOSE
Rule 18    boolsent -> OPEN IFF sentence sentence CLOSE
Rule 19    boolsent -> OPEN NOT sentence CLOSE
Rule 20    empty -> <empty>

Terminals, with rules where they appear

AND                  : 15
CHAR                 : 
CLOSE                : 8 15 16 17 18 19
COMMENT              : 
DIGIT                : 
IF                   : 17
IFF                  : 18
NAMEQUOTE            : 
NOT                  : 19
NUMERAL              : 13
OPEN                 : 8 15 16 17 18 19
OR                   : 16
QUOTEDSTRING         : 14
RESERVEDELEMENT      : 
STRINGQUOTE          : 
error                : 

Nonterminals, with rules where they appear

atomsent             : 3
boolsent             : 4
empty                : 7 12
interpretedname      : 9 10 11
multisent            : 6 15 16
predicate            : 8
sentence             : 1 2 5 6 17 17 18 18 19
starter              : 2 0
termseq              : 8 11

Parsing method: LALR

state 0

    (0) S' -> . starter
    (1) starter -> . sentence
    (2) starter -> . sentence starter
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    starter                        shift and go to state 1
    sentence                       shift and go to state 2
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 1

    (0) S' -> starter .



state 2

    (1) starter -> sentence .
    (2) starter -> sentence . starter
    (1) starter -> . sentence
    (2) starter -> . sentence starter
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    $end            reduce using rule 1 (starter -> sentence .)
    OPEN            shift and go to state 5

    sentence                       shift and go to state 2
    starter                        shift and go to state 6
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 3

    (3) sentence -> atomsent .

    OPEN            reduce using rule 3 (sentence -> atomsent .)
    $end            reduce using rule 3 (sentence -> atomsent .)
    CLOSE           reduce using rule 3 (sentence -> atomsent .)


state 4

    (4) sentence -> boolsent .

    OPEN            reduce using rule 4 (sentence -> boolsent .)
    $end            reduce using rule 4 (sentence -> boolsent .)
    CLOSE           reduce using rule 4 (sentence -> boolsent .)


state 5

    (8) atomsent -> OPEN . predicate termseq CLOSE
    (15) boolsent -> OPEN . AND multisent CLOSE
    (16) boolsent -> OPEN . OR multisent CLOSE
    (17) boolsent -> OPEN . IF sentence sentence CLOSE
    (18) boolsent -> OPEN . IFF sentence sentence CLOSE
    (19) boolsent -> OPEN . NOT sentence CLOSE
    (9) predicate -> . interpretedname
    (13) interpretedname -> . NUMERAL
    (14) interpretedname -> . QUOTEDSTRING

    AND             shift and go to state 8
    OR              shift and go to state 9
    IF              shift and go to state 10
    IFF             shift and go to state 11
    NOT             shift and go to state 12
    NUMERAL         shift and go to state 14
    QUOTEDSTRING    shift and go to state 15

    predicate                      shift and go to state 7
    interpretedname                shift and go to state 13

state 6

    (2) starter -> sentence starter .

    $end            reduce using rule 2 (starter -> sentence starter .)


state 7

    (8) atomsent -> OPEN predicate . termseq CLOSE
    (10) termseq -> . interpretedname
    (11) termseq -> . interpretedname termseq
    (12) termseq -> . empty
    (13) interpretedname -> . NUMERAL
    (14) interpretedname -> . QUOTEDSTRING
    (20) empty -> .

    NUMERAL         shift and go to state 14
    QUOTEDSTRING    shift and go to state 15
    CLOSE           reduce using rule 20 (empty -> .)

    termseq                        shift and go to state 16
    interpretedname                shift and go to state 17
    empty                          shift and go to state 18

state 8

    (15) boolsent -> OPEN AND . multisent CLOSE
    (5) multisent -> . sentence
    (6) multisent -> . sentence multisent
    (7) multisent -> . empty
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (20) empty -> .
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    CLOSE           reduce using rule 20 (empty -> .)
    OPEN            shift and go to state 5

    multisent                      shift and go to state 19
    sentence                       shift and go to state 20
    empty                          shift and go to state 21
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 9

    (16) boolsent -> OPEN OR . multisent CLOSE
    (5) multisent -> . sentence
    (6) multisent -> . sentence multisent
    (7) multisent -> . empty
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (20) empty -> .
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    CLOSE           reduce using rule 20 (empty -> .)
    OPEN            shift and go to state 5

    multisent                      shift and go to state 22
    sentence                       shift and go to state 20
    empty                          shift and go to state 21
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 10

    (17) boolsent -> OPEN IF . sentence sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 23
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 11

    (18) boolsent -> OPEN IFF . sentence sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 24
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 12

    (19) boolsent -> OPEN NOT . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 25
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 13

    (9) predicate -> interpretedname .

    NUMERAL         reduce using rule 9 (predicate -> interpretedname .)
    QUOTEDSTRING    reduce using rule 9 (predicate -> interpretedname .)
    CLOSE           reduce using rule 9 (predicate -> interpretedname .)


state 14

    (13) interpretedname -> NUMERAL .

    NUMERAL         reduce using rule 13 (interpretedname -> NUMERAL .)
    QUOTEDSTRING    reduce using rule 13 (interpretedname -> NUMERAL .)
    CLOSE           reduce using rule 13 (interpretedname -> NUMERAL .)


state 15

    (14) interpretedname -> QUOTEDSTRING .

    NUMERAL         reduce using rule 14 (interpretedname -> QUOTEDSTRING .)
    QUOTEDSTRING    reduce using rule 14 (interpretedname -> QUOTEDSTRING .)
    CLOSE           reduce using rule 14 (interpretedname -> QUOTEDSTRING .)


state 16

    (8) atomsent -> OPEN predicate termseq . CLOSE

    CLOSE           shift and go to state 26


state 17

    (10) termseq -> interpretedname .
    (11) termseq -> interpretedname . termseq
    (10) termseq -> . interpretedname
    (11) termseq -> . interpretedname termseq
    (12) termseq -> . empty
    (13) interpretedname -> . NUMERAL
    (14) interpretedname -> . QUOTEDSTRING
    (20) empty -> .

  ! reduce/reduce conflict for CLOSE resolved using rule 10 (termseq -> interpretedname .)
    CLOSE           reduce using rule 10 (termseq -> interpretedname .)
    NUMERAL         shift and go to state 14
    QUOTEDSTRING    shift and go to state 15

  ! CLOSE           [ reduce using rule 20 (empty -> .) ]

    interpretedname                shift and go to state 17
    termseq                        shift and go to state 27
    empty                          shift and go to state 18

state 18

    (12) termseq -> empty .

    CLOSE           reduce using rule 12 (termseq -> empty .)


state 19

    (15) boolsent -> OPEN AND multisent . CLOSE

    CLOSE           shift and go to state 28


state 20

    (5) multisent -> sentence .
    (6) multisent -> sentence . multisent
    (5) multisent -> . sentence
    (6) multisent -> . sentence multisent
    (7) multisent -> . empty
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (20) empty -> .
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

  ! reduce/reduce conflict for CLOSE resolved using rule 5 (multisent -> sentence .)
    CLOSE           reduce using rule 5 (multisent -> sentence .)
    OPEN            shift and go to state 5

  ! CLOSE           [ reduce using rule 20 (empty -> .) ]

    sentence                       shift and go to state 20
    multisent                      shift and go to state 29
    empty                          shift and go to state 21
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 21

    (7) multisent -> empty .

    CLOSE           reduce using rule 7 (multisent -> empty .)


state 22

    (16) boolsent -> OPEN OR multisent . CLOSE

    CLOSE           shift and go to state 30


state 23

    (17) boolsent -> OPEN IF sentence . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 31
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 24

    (18) boolsent -> OPEN IFF sentence . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (8) atomsent -> . OPEN predicate termseq CLOSE
    (15) boolsent -> . OPEN AND multisent CLOSE
    (16) boolsent -> . OPEN OR multisent CLOSE
    (17) boolsent -> . OPEN IF sentence sentence CLOSE
    (18) boolsent -> . OPEN IFF sentence sentence CLOSE
    (19) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 32
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 25

    (19) boolsent -> OPEN NOT sentence . CLOSE

    CLOSE           shift and go to state 33


state 26

    (8) atomsent -> OPEN predicate termseq CLOSE .

    OPEN            reduce using rule 8 (atomsent -> OPEN predicate termseq CLOSE .)
    $end            reduce using rule 8 (atomsent -> OPEN predicate termseq CLOSE .)
    CLOSE           reduce using rule 8 (atomsent -> OPEN predicate termseq CLOSE .)


state 27

    (11) termseq -> interpretedname termseq .

    CLOSE           reduce using rule 11 (termseq -> interpretedname termseq .)


state 28

    (15) boolsent -> OPEN AND multisent CLOSE .

    OPEN            reduce using rule 15 (boolsent -> OPEN AND multisent CLOSE .)
    $end            reduce using rule 15 (boolsent -> OPEN AND multisent CLOSE .)
    CLOSE           reduce using rule 15 (boolsent -> OPEN AND multisent CLOSE .)


state 29

    (6) multisent -> sentence multisent .

    CLOSE           reduce using rule 6 (multisent -> sentence multisent .)


state 30

    (16) boolsent -> OPEN OR multisent CLOSE .

    OPEN            reduce using rule 16 (boolsent -> OPEN OR multisent CLOSE .)
    $end            reduce using rule 16 (boolsent -> OPEN OR multisent CLOSE .)
    CLOSE           reduce using rule 16 (boolsent -> OPEN OR multisent CLOSE .)


state 31

    (17) boolsent -> OPEN IF sentence sentence . CLOSE

    CLOSE           shift and go to state 34


state 32

    (18) boolsent -> OPEN IFF sentence sentence . CLOSE

    CLOSE           shift and go to state 35


state 33

    (19) boolsent -> OPEN NOT sentence CLOSE .

    OPEN            reduce using rule 19 (boolsent -> OPEN NOT sentence CLOSE .)
    $end            reduce using rule 19 (boolsent -> OPEN NOT sentence CLOSE .)
    CLOSE           reduce using rule 19 (boolsent -> OPEN NOT sentence CLOSE .)


state 34

    (17) boolsent -> OPEN IF sentence sentence CLOSE .

    OPEN            reduce using rule 17 (boolsent -> OPEN IF sentence sentence CLOSE .)
    $end            reduce using rule 17 (boolsent -> OPEN IF sentence sentence CLOSE .)
    CLOSE           reduce using rule 17 (boolsent -> OPEN IF sentence sentence CLOSE .)


state 35

    (18) boolsent -> OPEN IFF sentence sentence CLOSE .

    OPEN            reduce using rule 18 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    $end            reduce using rule 18 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    CLOSE           reduce using rule 18 (boolsent -> OPEN IFF sentence sentence CLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 17 resolved using rule (termseq -> interpretedname)
WARNING: rejected rule (empty -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 20 resolved using rule (multisent -> sentence)
WARNING: rejected rule (empty -> <empty>) in state 20
