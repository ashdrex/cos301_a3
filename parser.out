Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    COMMENT
    DIGIT
    NAMEQUOTE
    RESERVEDELEMENT
    STRINGQUOTE

Grammar

Rule 0     S' -> starter
Rule 1     starter -> sentence
Rule 2     starter -> sentence starter
Rule 3     sentence -> atomsent
Rule 4     sentence -> boolsent
Rule 5     atomsent -> OPEN predicate CLOSE
Rule 6     predicate -> interpretedname
Rule 7     termseq -> interpretedname
Rule 8     termseq -> interpretedname termseq
Rule 9     interpretedname -> NUMERAL
Rule 10    interpretedname -> QUOTEDSTRING
Rule 11    boolsent -> OPEN AND sentence CLOSE
Rule 12    boolsent -> OPEN OR sentence CLOSE
Rule 13    boolsent -> OPEN IF sentence sentence CLOSE
Rule 14    boolsent -> OPEN IFF sentence sentence CLOSE
Rule 15    boolsent -> OPEN NOT sentence CLOSE

Terminals, with rules where they appear

AND                  : 11
CHAR                 : 
CLOSE                : 5 11 12 13 14 15
COMMENT              : 
DIGIT                : 
IF                   : 13
IFF                  : 14
NAMEQUOTE            : 
NOT                  : 15
NUMERAL              : 9
OPEN                 : 5 11 12 13 14 15
OR                   : 12
QUOTEDSTRING         : 10
RESERVEDELEMENT      : 
STRINGQUOTE          : 
error                : 

Nonterminals, with rules where they appear

atomsent             : 3
boolsent             : 4
interpretedname      : 6 7 8
predicate            : 5
sentence             : 1 2 11 12 13 13 14 14 15
starter              : 2 0
termseq              : 8

Parsing method: LALR

state 0

    (0) S' -> . starter
    (1) starter -> . sentence
    (2) starter -> . sentence starter
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    starter                        shift and go to state 1
    sentence                       shift and go to state 2
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 1

    (0) S' -> starter .



state 2

    (1) starter -> sentence .
    (2) starter -> sentence . starter
    (1) starter -> . sentence
    (2) starter -> . sentence starter
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    $end            reduce using rule 1 (starter -> sentence .)
    OPEN            shift and go to state 5

    sentence                       shift and go to state 2
    starter                        shift and go to state 6
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 3

    (3) sentence -> atomsent .

    OPEN            reduce using rule 3 (sentence -> atomsent .)
    $end            reduce using rule 3 (sentence -> atomsent .)
    CLOSE           reduce using rule 3 (sentence -> atomsent .)


state 4

    (4) sentence -> boolsent .

    OPEN            reduce using rule 4 (sentence -> boolsent .)
    $end            reduce using rule 4 (sentence -> boolsent .)
    CLOSE           reduce using rule 4 (sentence -> boolsent .)


state 5

    (5) atomsent -> OPEN . predicate CLOSE
    (11) boolsent -> OPEN . AND sentence CLOSE
    (12) boolsent -> OPEN . OR sentence CLOSE
    (13) boolsent -> OPEN . IF sentence sentence CLOSE
    (14) boolsent -> OPEN . IFF sentence sentence CLOSE
    (15) boolsent -> OPEN . NOT sentence CLOSE
    (6) predicate -> . interpretedname
    (9) interpretedname -> . NUMERAL
    (10) interpretedname -> . QUOTEDSTRING

    AND             shift and go to state 8
    OR              shift and go to state 9
    IF              shift and go to state 10
    IFF             shift and go to state 11
    NOT             shift and go to state 12
    NUMERAL         shift and go to state 14
    QUOTEDSTRING    shift and go to state 15

    predicate                      shift and go to state 7
    interpretedname                shift and go to state 13

state 6

    (2) starter -> sentence starter .

    $end            reduce using rule 2 (starter -> sentence starter .)


state 7

    (5) atomsent -> OPEN predicate . CLOSE

    CLOSE           shift and go to state 16


state 8

    (11) boolsent -> OPEN AND . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 17
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 9

    (12) boolsent -> OPEN OR . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 18
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 10

    (13) boolsent -> OPEN IF . sentence sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 19
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 11

    (14) boolsent -> OPEN IFF . sentence sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 20
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 12

    (15) boolsent -> OPEN NOT . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 21
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 13

    (6) predicate -> interpretedname .

    CLOSE           reduce using rule 6 (predicate -> interpretedname .)


state 14

    (9) interpretedname -> NUMERAL .

    CLOSE           reduce using rule 9 (interpretedname -> NUMERAL .)


state 15

    (10) interpretedname -> QUOTEDSTRING .

    CLOSE           reduce using rule 10 (interpretedname -> QUOTEDSTRING .)


state 16

    (5) atomsent -> OPEN predicate CLOSE .

    OPEN            reduce using rule 5 (atomsent -> OPEN predicate CLOSE .)
    $end            reduce using rule 5 (atomsent -> OPEN predicate CLOSE .)
    CLOSE           reduce using rule 5 (atomsent -> OPEN predicate CLOSE .)


state 17

    (11) boolsent -> OPEN AND sentence . CLOSE

    CLOSE           shift and go to state 22


state 18

    (12) boolsent -> OPEN OR sentence . CLOSE

    CLOSE           shift and go to state 23


state 19

    (13) boolsent -> OPEN IF sentence . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 24
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 20

    (14) boolsent -> OPEN IFF sentence . sentence CLOSE
    (3) sentence -> . atomsent
    (4) sentence -> . boolsent
    (5) atomsent -> . OPEN predicate CLOSE
    (11) boolsent -> . OPEN AND sentence CLOSE
    (12) boolsent -> . OPEN OR sentence CLOSE
    (13) boolsent -> . OPEN IF sentence sentence CLOSE
    (14) boolsent -> . OPEN IFF sentence sentence CLOSE
    (15) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 5

    sentence                       shift and go to state 25
    atomsent                       shift and go to state 3
    boolsent                       shift and go to state 4

state 21

    (15) boolsent -> OPEN NOT sentence . CLOSE

    CLOSE           shift and go to state 26


state 22

    (11) boolsent -> OPEN AND sentence CLOSE .

    OPEN            reduce using rule 11 (boolsent -> OPEN AND sentence CLOSE .)
    $end            reduce using rule 11 (boolsent -> OPEN AND sentence CLOSE .)
    CLOSE           reduce using rule 11 (boolsent -> OPEN AND sentence CLOSE .)


state 23

    (12) boolsent -> OPEN OR sentence CLOSE .

    OPEN            reduce using rule 12 (boolsent -> OPEN OR sentence CLOSE .)
    $end            reduce using rule 12 (boolsent -> OPEN OR sentence CLOSE .)
    CLOSE           reduce using rule 12 (boolsent -> OPEN OR sentence CLOSE .)


state 24

    (13) boolsent -> OPEN IF sentence sentence . CLOSE

    CLOSE           shift and go to state 27


state 25

    (14) boolsent -> OPEN IFF sentence sentence . CLOSE

    CLOSE           shift and go to state 28


state 26

    (15) boolsent -> OPEN NOT sentence CLOSE .

    OPEN            reduce using rule 15 (boolsent -> OPEN NOT sentence CLOSE .)
    $end            reduce using rule 15 (boolsent -> OPEN NOT sentence CLOSE .)
    CLOSE           reduce using rule 15 (boolsent -> OPEN NOT sentence CLOSE .)


state 27

    (13) boolsent -> OPEN IF sentence sentence CLOSE .

    OPEN            reduce using rule 13 (boolsent -> OPEN IF sentence sentence CLOSE .)
    $end            reduce using rule 13 (boolsent -> OPEN IF sentence sentence CLOSE .)
    CLOSE           reduce using rule 13 (boolsent -> OPEN IF sentence sentence CLOSE .)


state 28

    (14) boolsent -> OPEN IFF sentence sentence CLOSE .

    OPEN            reduce using rule 14 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    $end            reduce using rule 14 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    CLOSE           reduce using rule 14 (boolsent -> OPEN IFF sentence sentence CLOSE .)

